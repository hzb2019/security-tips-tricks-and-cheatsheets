add current directory to PATH:
  export PATH=$PATH:$(pwd);

untarball:
  tar -xvzf [filename].tar.gz

ssh file transfer (using ssh credentials):
  download: 
    scp [LFILEPATH] [RUSER]@[RHOST]:[RFILEPATH]
  upload:
    scp [RUSER]@[RHOST]:[RFILEPATH] [LFILEPATH] 

python server:
  python3 -m http.server [LPORT]

operators:
  & -> backgrounds command
  && -> chains commands, requires successful completion of sequence of commands

_________________________________________
FROM https://tryhackme.com/r/room/zeekbro

  Basics: 
    View the command history:
    ubuntu@ubuntu$ history

    Execute the 10th command in history:
    ubuntu@ubuntu$ !10

    Execute the previous command:
    ubuntu@ubuntu$ !!

  Reading Files:
    Read sample.txt file:
    ubuntu@ubuntu$ cat sample.txt

    Read the first 10 lines of the file:
    ubuntu@ubuntu$ head sample.txt

    Read the last 10 lines of the file:
    ubuntu@ubuntu$ tail sample.txt

    Print line 11:
    ubuntu@ubuntu$ cat test.txt | sed -n '11p'

    Print lines between 10-15:
    ubuntu@ubuntu$ cat test.txt | sed -n '10,15p'

    Print lines below 11:
    ubuntu@ubuntu$ cat test.txt | awk 'NR < 11 {print $0}'

    Print line 11:
    ubuntu@ubuntu$ cat test.txt | awk 'NR == 11 {print $0}'

  Finding and Filtering:
    Cut the 1st field:
    ubuntu@ubuntu$ cat test.txt | cut -f 1

    Cut the 1st column:
    ubuntu@ubuntu$ cat test.txt | cut -c1

    Filter specific keywords:
    ubuntu@ubuntu$ cat test.txt | grep 'keywords'

    Sort outputs alphabetically:
    ubuntu@ubuntu$ cat test.txt | sort

    Sort outputs numerically:
    ubuntu@ubuntu$ cat test.txt | sort -n

    Eliminate duplicate lines:
    ubuntu@ubuntu$ cat test.txt | uniq

    Count line numbers:
    ubuntu@ubuntu$ cat test.txt | wc -l

    Show line numbers
    ubuntu@ubuntu$ cat test.txt | nl

  Advanced Reading and Processing:
    sort | uniq   ((Remove duplicate values.))
    sort | uniq -c   ((Remove duplicates and count the number of occurrences for each value.))
    sort -nr   ((Sort values numerically and recursively.))
    rev   ((Reverse string characters.))
    cut -f 1   ((Cut field 1.))
    cut -d '.' -f 1-2   ((Split the string on every dot and print keep the first two fields.))
    grep -v 'test'   ((Display lines that  don't match the "test" string.))
    grep -v -e 'test1' -e 'test2'   ((Display lines that don't match one or both "test1" and "test2" strings.))
    file  (( View file information.))
    grep -rin Testvalue1 * | column -t | less -S   ((Search the "Testvalue1" string everywhere, organise column spaces and view the output with less.))