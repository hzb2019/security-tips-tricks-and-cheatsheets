
  https://docs.zeek.org/en/current/script-reference/log-files.html
  https://corelight.com/about-zeek/zeek-data

  Zeek: Network Security Monitoring and Intrusion Detection System framework. Heavily
  focused on network analysis. Event-based detections, heavily focused on specific threats
  to trigger alerts. Commonly used for network monitoring, in-depth traffic analysis, and
  intrusion detection in chained events.

  Zeek operates by collecting packets, processing the packets into their constituent parts
  ("events") in the event engine, then sends those events to the policy script interpreter
  for semantic analysis.

  /opt/zeek/logs ((default log path))

_______
OPTIONS

  -v ((version))
  -C ((ignore checksum errors))
  -r [FILE] ((read file))
  -s [FILE] ((use signature file))
  
_______
ZEEKCTL

  sudo su

  zeekctl ([status/start/stop]) ((start zeek as a service))
    status
    start
    stop

________
ZEEK-CUT

  Use FIELDS not TYPES
  cat, cut, grep, sort, uniq

____________
ZEEK FILTERS

  Header:
    src-ip
    dst-ip
    src-port
    dst-port
    ip-proto ((target protocol [TCP/UDP/ICMP/ICMP6/IP/IP6]))

  Content:
    payload ((packet payload))
    http-request ((decoded HTTP requests))
    http-request-header
    http-request-body
    http-reply-header
    http-reply-body
    ftp ((command line input of FTP sessions))

  Context:
    same-ip ((filtering source and destination ip addresses for dupes))

  Action:
    event ((signature match message))

  Comparison Operators: ==, !=, <, <=, >, >=

  NOTE! Filters accept string, numeric, and regex values

__________________
EXAMPLE SIGNATURES 

  signature http-password {
     ip-proto == tcp
     dst-port == 80
     payload /.*password.*/
     event "Cleartext Password Found!"
  }

  # signature: Signature name.
  # ip-proto: Filtering TCP connection.
  # dst-port: Filtering destination port 80.
  # payload: Filtering the "password" phrase.
  # event: Signature match message.

  signature ftp-admin {
     ip-proto == tcp
     ftp /.*USER.*dmin.*/
     event "FTP Admin Login Attempt!"
  }

  signature ftp-username {
    ip-proto == tcp
    ftp /.*USER.*/
    event "FTP Username Input Found!"
  }

  signature ftp-brute {
     ip-proto == tcp
     payload /.*530.*Login.*incorrect.*/
     event "FTP Brute-force Attempt"
  }

____________
ZEEK SCRIPTS

  https://try.bro.org/#/?example=hello
  https://docs.zeek.org/en/master/script-reference/scripts.html

  /opt/zeek/share/zeek/base
  /opt/zeek/share/zeek/site
  /opt/zeek/share/zeek/policy
  /opt/zeek/share/zeek/site/local.zeek

  load @/script/path
  load @script-name

  local ((load all local scripts))

  EXAMPLES:
    event dhcp_message (c: connection, is_orig: bool, msg: DHCP::Msg, options: DHCP::Options)
    {
      print options$host_name;
    }

    event zeek_init()
    {
      print ("Started Zeek!");
    }
    event zeek_done()
    {
      print ("Stopped Zeek!");
    }

    event new_connection(c: connection)
    {
      print ("###########################################################");
      print ("");
      print ("New Connection Found!");
      print ("");
      print fmt ("Source Host: %s # %s --->", c$id$orig_h, c$id$orig_p);
      print fmt ("Destination Host: resp: %s # %s <---", c$id$resp_h, c$id$resp_p);
      print ("");
    }

    event signature_match (state: signature_state, msg: string, data: string)
    {
      if (state$sig_id == "ftp-admin")
        {
          print ("Signature hit! --> #FTP-Admin ");
        }
    }

    signature ftp-admin {
      ip-proto == tcp
      ftp /.*USER.*admin.*/
      event "FTP Username Input Found!"
    }

________
PACKAGES

  zkg
      install [PATH/GITHUB_URL]
      list
      remove
      refresh
      upgrade

  /opt/zeek/share/zeek/site

  Cleartext submission of password: zeek/cybera/zeek-sniffpass
